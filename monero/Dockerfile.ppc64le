FROM ppc64le/ubuntu:16.04

ENV DOCKER_HOST unix:///tmp/docker.sock
ENV DOCKER_GEN_VERSION 0.7.1

# TODO: fix this
# HEALTHCHECK --interval=5m --timeout=3s \
#     CMD monero-wallet-cli getinfo || exit 1

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update \
 && apt-get install -y gnupg

ADD docker-apt-install.sh /usr/local/bin/docker-apt-install
RUN docker-apt-install \
    bzip2 \
    ca-certificates \
    curl \
    torsocks

ENV MONERO_VERSION 0.11.0.0

## Monero install from binary
#ENV MONERO_SHA256 fa7742c822f3c966aa842bf20a9920803d690d9db02033d9b397cefc7cc07ff4
#RUN curl -fSL -o monero.tar.bz2 "https://downloads.getmonero.org/cli/monero-linux-x64-v$MONERO_VERSION.tar.bz2" \
# && echo "$MONERO_SHA256 monero.tar.bz2" | sha256sum -c - \
# && tar -xjvf monero.tar.bz2 \
# && cp ./monero-v$MONERO_VERSION/* /usr/local/bin/ \
# && rm -rf monero*

## Monero install from source
RUN apt-get update \
    && apt-get install -y ca-certificates curl iputils-ping numactl \
    && apt-get install -y git build-essential pkgconf cmake g++ libunbound-dev libssl-dev libevent-dev \
        libgtest-dev libdb++-dev libldns-dev libexpat1-dev libbison-dev make \
    && rm -rf /var/lib/apt/lists/*

RUN apt-get update \
    && apt-get install -y libboost-all-dev

RUN git clone https://github.com/monero-project/bitmonero.git /opt/bitmonero \
    && cd /opt/bitmonero \
    && git checkout v$MONERO_VERSION \
    && make -j$(nproc) release \
    && mv /opt/bitmonero/build/release/bin/* /usr/local/bin/ \
    && cd / \
    && rm -rf /opt/bitmonero

RUN export DEBIAN_FRONTEND=noninteractive \
 && apt-get -qq update \
 && apt-get install -y --no-install-recommends \
      ca-certificates \
      wget \
      supervisor \
      tor \
 && apt-get clean && rm -rf /var/lib/apt/lists/*

# Setup supervisord
ADD files/supervisor/supervisord.conf /etc/supervisor/supervisord.conf

# gcc for cgo
RUN apt-get update && apt-get install -y --no-install-recommends \
      g++ \
      gcc \
      libc6-dev \
      make \
      pkg-config \
 && rm -rf /var/lib/apt/lists/*

ENV GOLANG_VERSION 1.9.1

RUN set -eux; \
    dpkgArch="$(dpkg --print-architecture)"; \
    case "${dpkgArch##*-}" in \
        amd64) goRelArch='linux-amd64'; goRelSha256='07d81c6b6b4c2dcf1b5ef7c27aaebd3691cdb40548500941f92b221147c5d9c7' ;; \
        armhf) goRelArch='linux-armv6l'; goRelSha256='65a0495a50c7c240a6487b1170939586332f6c8f3526abdbb9140935b3cff14c' ;; \
        arm64) goRelArch='linux-arm64'; goRelSha256='d31ecae36efea5197af271ccce86ccc2baf10d2e04f20d0fb75556ecf0614dad' ;; \
        i386) goRelArch='linux-386'; goRelSha256='2cea1ce9325cb40839601b566bc02b11c92b2942c21110b1b254c7e72e5581e7' ;; \
        ppc64el) goRelArch='linux-ppc64le'; goRelSha256='de57b6439ce9d4dd8b528599317a35fa1e09d6aa93b0a80e3945018658d963b8' ;; \
        s390x) goRelArch='linux-s390x'; goRelSha256='9adf03574549db82a72e0d721ef2178ec5e51d1ce4f309b271a2bca4dcf206f6' ;; \
        *) goRelArch='src'; goRelSha256='a84afc9dc7d64fe0fa84d4d735e2ece23831a22117b50dafc75c1484f1cb550e'; \
            echo >&2; echo >&2 "warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source"; echo >&2 ;; \
    esac; \
    url="https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz"; \
    wget -O go.tgz "$url"; \
    echo "${goRelSha256} *go.tgz" | sha256sum -c -; \
    tar -C /usr/local -xzf go.tgz; \
    rm go.tgz; \
    if [ "$goRelArch" = 'src' ]; then \
        echo >&2; \
        echo >&2 'error: UNIMPLEMENTED'; \
        echo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \
        echo >&2; \
        exit 1; \
    fi; \
    export PATH="/usr/local/go/bin:$PATH"; \
    go version

ENV GOPATH /go
ENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH

RUN mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"

# Install docker-gen
RUN mkdir -p $GOPATH/src/github.com/jwilder/
RUN git clone https://github.com/jwilder/docker-gen $GOPATH/src/github.com/jwilder/docker-gen/

WORKDIR $GOPATH/src/github.com/jwilder/docker-gen/
RUN git checkout tags/${DOCKER_GEN_VERSION}

RUN make get-deps \
 && make

RUN ln -s /go/src/github.com/jwilder/docker-gen/docker-gen /usr/bin/docker-gen

WORKDIR /app

ADD files/docker-gen/torsocks.tmpl /app/torsocks.tmpl
ADD run.sh /app/bin/run.sh

RUN groupadd -g 1000 monero && useradd -m -s /bin/bash -g 1000 -u 1000 -d /home/monero monero

# this config will be setup by the entrypoint script if TOR_HOSTNAME is set
RUN mkdir -p /wallet /home/monero/.bitmonero \
 && touch /etc/tor/torsocks.conf \
 && chown monero:monero /etc/tor/torsocks.conf /wallet /home/monero/.bitmonero

RUN dpkg --search /etc/supervisor/supervisord.conf

# Use the default user that comes with the image
ENV HOME /home/monero
WORKDIR /home/monero

EXPOSE 18080 18081

VOLUME /home/monero/.bitmonero /wallet

ENTRYPOINT ["/app/bin/run.sh"]
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/supervisord.conf"]

